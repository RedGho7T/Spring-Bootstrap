package ru.kata.spring.boot_security.demo.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import ru.kata.spring.boot_security.demo.model.User;

@Service
public class UserDetailsServiceImpl implements UserDetailsService {

    private final UserService userService;

    @Autowired
    public UserDetailsServiceImpl(UserService userService) {
        this.userService = userService;
    }

    @Override
    public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
        System.out.println("üîç –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å email: " + email);

        try {
            User user = userService.getByEmail(email);
            if (user == null) {
                System.out.println("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –ù–ê–ô–î–ï–ù: " + email);
                throw new UsernameNotFoundException("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '" + email + "' –Ω–µ –Ω–∞–π–¥–µ–Ω");
            }

            System.out.println("‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + user.getName());
            System.out.println("‚úÖ –†–æ–ª–∏: " + user.getRoles().size());

            user.getRoles().forEach(role -> {
                System.out.println("  - –†–æ–ª—å: " + role.getName());
            });

            return user;

        } catch (Exception e) {
            System.out.println("‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + e.getMessage());
            e.printStackTrace();
            throw new UsernameNotFoundException("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + email, e);
        }
    }

}